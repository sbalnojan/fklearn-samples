containers:
  build-env:
    image: python:3.7
    volumes:
      - local: .
        container: /src
        options: cached
      - local: .pip-cache
        container: /src/.pip-cache
      - local: .venv-cache
        container: /src/.venv
    working_directory: /src
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
    environment:
      PIPENV_VENV_IN_PROJECT: true
      PYTHONUSERBASE: "/src/.pip-cache"

tasks:
  dep_0:
    description: Download pipenv dependency & linter
    group: Utility tasks
    run:
      container: build-env
      command: pip install --user pipenv

  dep_1:
    description: Download dependencies
    group: Utility tasks
    run:
      container: build-env
      command: python -m pipenv install --skip-lock

  dep_2:
    description: Download dev dependencies (run only if nec.)
    group: Utility tasks
    run:
      container: build-env
      command: python -m pipenv install -d --skip-lock


  shell:
    description: Open shell in container
    group: Utility tasks
    run:
      container: build-env
      command: sh

  lint:
    description: lint python files
    group: Utility tasks
    run:
      container: build-env
      command: python -m pipenv run python -m black .

  get_data:
    description: download nlp data to local file
    group: Build tasks
    run:
      container: build-env
      command: python -m pipenv run python 0_get_data.py

  run_example_1:
    description: Run a sinmple fklearn example
    group: Build tasks
    run:
      container: build-env
      command: python -m pipenv run python 1_easy.py

  run_example_1_wo:
    description: Run a sinmple sklearn example, without functions
    group: Build tasks
    run:
      container: build-env
      command: python -m pipenv run python 1_easy_wo_functions.py

  run_example_2:
    description: Run a nlp fklearn example
    group: Build tasks
    run:
      container: build-env
      command: python -m pipenv run python 2_nlp_example.py

